services:

  redpanda:
    image: docker.redpanda.com/vectorized/redpanda:v21.11.15
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda:28082,OUTSIDE://localhost:8082
    ports:
      - 9092:9092
      - 28082:28082
      - 29092:29092
      - 8081:8081
      - 8082:8082

  redpanda-console:
    image: docker.redpanda.com/vectorized/console
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8888:8080

  profile-producer:
    image: maxweis/profile-producer:1.0.0-SNAPSHOT
    restart: always
    environment:
      KAFKA_BOOTSTRAP_SERVERS: redpanda:29092
      REGISTRY_HOST: redpanda
      POSTGRES_HOST: postgres-producer
    ports:
      - 9080:8080

  profile-consumer:
    image: maxweis/profile-consumer:1.0.0-SNAPSHOT
    restart: always
    environment:
      KAFKA_BOOTSTRAP_SERVERS: redpanda:29092
      REGISTRY_HOST: redpanda
      POSTGRES_HOST: postgres-consumer
    ports:
      - 9081:8080
